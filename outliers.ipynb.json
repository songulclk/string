{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "adae0486",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PRIMARY_KEY</th>\n",
       "      <th>STATE</th>\n",
       "      <th>YEAR</th>\n",
       "      <th>ENROLL</th>\n",
       "      <th>TOTAL_REVENUE</th>\n",
       "      <th>FEDERAL_REVENUE</th>\n",
       "      <th>STATE_REVENUE</th>\n",
       "      <th>LOCAL_REVENUE</th>\n",
       "      <th>TOTAL_EXPENDITURE</th>\n",
       "      <th>INSTRUCTION_EXPENDITURE</th>\n",
       "      <th>...</th>\n",
       "      <th>GRADES_4_G</th>\n",
       "      <th>GRADES_8_G</th>\n",
       "      <th>GRADES_12_G</th>\n",
       "      <th>GRADES_1_8_G</th>\n",
       "      <th>GRADES_9_12_G</th>\n",
       "      <th>GRADES_ALL_G</th>\n",
       "      <th>AVG_MATH_4_SCORE</th>\n",
       "      <th>AVG_MATH_8_SCORE</th>\n",
       "      <th>AVG_READING_4_SCORE</th>\n",
       "      <th>AVG_READING_8_SCORE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1992_ALABAMA</td>\n",
       "      <td>ALABAMA</td>\n",
       "      <td>1992</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2678885.0</td>\n",
       "      <td>304177.0</td>\n",
       "      <td>1659028.0</td>\n",
       "      <td>715680.0</td>\n",
       "      <td>2653798.0</td>\n",
       "      <td>1481703.0</td>\n",
       "      <td>...</td>\n",
       "      <td>57948.0</td>\n",
       "      <td>58025.0</td>\n",
       "      <td>41167.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>731634.0</td>\n",
       "      <td>208.0</td>\n",
       "      <td>252.0</td>\n",
       "      <td>207.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1992_ALASKA</td>\n",
       "      <td>ALASKA</td>\n",
       "      <td>1992</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1049591.0</td>\n",
       "      <td>106780.0</td>\n",
       "      <td>720711.0</td>\n",
       "      <td>222100.0</td>\n",
       "      <td>972488.0</td>\n",
       "      <td>498362.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9748.0</td>\n",
       "      <td>8789.0</td>\n",
       "      <td>6714.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>122487.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1992_ARIZONA</td>\n",
       "      <td>ARIZONA</td>\n",
       "      <td>1992</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3258079.0</td>\n",
       "      <td>297888.0</td>\n",
       "      <td>1369815.0</td>\n",
       "      <td>1590376.0</td>\n",
       "      <td>3401580.0</td>\n",
       "      <td>1435908.0</td>\n",
       "      <td>...</td>\n",
       "      <td>55433.0</td>\n",
       "      <td>49081.0</td>\n",
       "      <td>37410.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>673477.0</td>\n",
       "      <td>215.0</td>\n",
       "      <td>265.0</td>\n",
       "      <td>209.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1992_ARKANSAS</td>\n",
       "      <td>ARKANSAS</td>\n",
       "      <td>1992</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1711959.0</td>\n",
       "      <td>178571.0</td>\n",
       "      <td>958785.0</td>\n",
       "      <td>574603.0</td>\n",
       "      <td>1743022.0</td>\n",
       "      <td>964323.0</td>\n",
       "      <td>...</td>\n",
       "      <td>34632.0</td>\n",
       "      <td>36011.0</td>\n",
       "      <td>27651.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>441490.0</td>\n",
       "      <td>210.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>211.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1992_CALIFORNIA</td>\n",
       "      <td>CALIFORNIA</td>\n",
       "      <td>1992</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26260025.0</td>\n",
       "      <td>2072470.0</td>\n",
       "      <td>16546514.0</td>\n",
       "      <td>7641041.0</td>\n",
       "      <td>27138832.0</td>\n",
       "      <td>14358922.0</td>\n",
       "      <td>...</td>\n",
       "      <td>418418.0</td>\n",
       "      <td>363296.0</td>\n",
       "      <td>270675.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5254844.0</td>\n",
       "      <td>208.0</td>\n",
       "      <td>261.0</td>\n",
       "      <td>202.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       PRIMARY_KEY       STATE  YEAR  ENROLL  TOTAL_REVENUE  FEDERAL_REVENUE  \\\n",
       "0     1992_ALABAMA     ALABAMA  1992     NaN      2678885.0         304177.0   \n",
       "1      1992_ALASKA      ALASKA  1992     NaN      1049591.0         106780.0   \n",
       "2     1992_ARIZONA     ARIZONA  1992     NaN      3258079.0         297888.0   \n",
       "3    1992_ARKANSAS    ARKANSAS  1992     NaN      1711959.0         178571.0   \n",
       "4  1992_CALIFORNIA  CALIFORNIA  1992     NaN     26260025.0        2072470.0   \n",
       "\n",
       "   STATE_REVENUE  LOCAL_REVENUE  TOTAL_EXPENDITURE  INSTRUCTION_EXPENDITURE  \\\n",
       "0      1659028.0       715680.0          2653798.0                1481703.0   \n",
       "1       720711.0       222100.0           972488.0                 498362.0   \n",
       "2      1369815.0      1590376.0          3401580.0                1435908.0   \n",
       "3       958785.0       574603.0          1743022.0                 964323.0   \n",
       "4     16546514.0      7641041.0         27138832.0               14358922.0   \n",
       "\n",
       "   ...  GRADES_4_G  GRADES_8_G  GRADES_12_G  GRADES_1_8_G  GRADES_9_12_G  \\\n",
       "0  ...     57948.0     58025.0      41167.0           NaN            NaN   \n",
       "1  ...      9748.0      8789.0       6714.0           NaN            NaN   \n",
       "2  ...     55433.0     49081.0      37410.0           NaN            NaN   \n",
       "3  ...     34632.0     36011.0      27651.0           NaN            NaN   \n",
       "4  ...    418418.0    363296.0     270675.0           NaN            NaN   \n",
       "\n",
       "   GRADES_ALL_G  AVG_MATH_4_SCORE  AVG_MATH_8_SCORE  AVG_READING_4_SCORE  \\\n",
       "0      731634.0             208.0             252.0                207.0   \n",
       "1      122487.0               NaN               NaN                  NaN   \n",
       "2      673477.0             215.0             265.0                209.0   \n",
       "3      441490.0             210.0             256.0                211.0   \n",
       "4     5254844.0             208.0             261.0                202.0   \n",
       "\n",
       "   AVG_READING_8_SCORE  \n",
       "0                  NaN  \n",
       "1                  NaN  \n",
       "2                  NaN  \n",
       "3                  NaN  \n",
       "4                  NaN  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "states=pd.read_csv('states_all.csv')\n",
    "states.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7d110994",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TOTAL_REVENUE</th>\n",
       "      <th>TOTAL_EXPENDITURE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2678885.0</td>\n",
       "      <td>2653798.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1049591.0</td>\n",
       "      <td>972488.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3258079.0</td>\n",
       "      <td>3401580.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1711959.0</td>\n",
       "      <td>1743022.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>26260025.0</td>\n",
       "      <td>27138832.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1710</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1711</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1712</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1713</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1714</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1715 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      TOTAL_REVENUE  TOTAL_EXPENDITURE\n",
       "0         2678885.0          2653798.0\n",
       "1         1049591.0           972488.0\n",
       "2         3258079.0          3401580.0\n",
       "3         1711959.0          1743022.0\n",
       "4        26260025.0         27138832.0\n",
       "...             ...                ...\n",
       "1710            NaN                NaN\n",
       "1711            NaN                NaN\n",
       "1712            NaN                NaN\n",
       "1713            NaN                NaN\n",
       "1714            NaN                NaN\n",
       "\n",
       "[1715 rows x 2 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "states[['TOTAL_REVENUE','TOTAL_EXPENDITURE']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "281e571d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'TOTAL_EXPENDITURE')"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# TO CHECK IF THERE ARE OUTLIERS\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.rcParams['figure.figsize'] = (10,4)\n",
    "plt.hist(states['TOTAL_EXPENDITURE'].dropna())\n",
    "plt.title('TOTAL_EXPENDITURE')\n",
    "#BOTH hAVE outliers,rightly skewed data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b20074ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'TOTAL_REVENUE')"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize'] = (10,4)\n",
    "plt.hist(states['TOTAL_REVENUE'])\n",
    "plt.title('TOTAL_REVENUE')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06762248",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2 handling OUTLIERS\n",
    "by winsorizing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "14ee93e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([457., 196., 145., 110.,  69.,  54.,  44.,  22.,  33., 145.]),\n",
       " array([ 1200186. ,  3243185.3,  5286184.6,  7329183.9,  9372183.2,\n",
       "        11415182.5, 13458181.8, 15501181.1, 17544180.4, 19587179.7,\n",
       "        21630179. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.stats.mstats import winsorize\n",
    "winsorizing1= winsorize(np.array(states['TOTAL_REVENUE'].dropna()), (0.10, 0.10))\n",
    "winsorizing1\n",
    "plt.hist(winsorizing1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "a63b854a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To check if there is any outlier after winsorinzing 'TOTAL_REVENUE':\n",
    "#z score\n",
    "from scipy.stats import zscore\n",
    "zscores=zscore(states['TOTAL_REVENUE'])\n",
    "z1=len((np.where(zscores>3))[0]) \n",
    "z1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "c1cf85e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([463., 185., 146., 113.,  85.,  44.,  40.,  29.,  24., 146.]),\n",
       " array([ 1228869. ,  3301092.5,  5373316. ,  7445539.5,  9517763. ,\n",
       "        11589986.5, 13662210. , 15734433.5, 17806657. , 19878880.5,\n",
       "        21951104. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#'TOTAL_EXPENDITURE' \n",
    "from scipy.stats.mstats import winsorize\n",
    "winsorizing2= winsorize(np.array(states['TOTAL_EXPENDITURE'].dropna()), (0.10, 0.10))\n",
    "winsorizing2\n",
    "plt.hist(winsorizing2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "60865c5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To check if there is any outlier after winsorinzing TOTAL_EXPENDITURE:\n",
    "#z score\n",
    "from scipy.stats import zscore\n",
    "zscores=zscore(states['TOTAL_EXPENDITURE'])\n",
    "z2=len((np.where(zscores>3))[0]) \n",
    "z2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "2105737b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(array([  1.,   2.,  14., 187., 995.,  50.,  16.,   3.,   5.,   2.]), array([-3897129. , -2958641.9, -2020154.8, -1081667.7,  -143180.6,\n",
      "         795306.5,  1733793.6,  2672280.7,  3610767.8,  4549254.9,\n",
      "        5487742. ]), <BarContainer object of 10 artists>)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#3 BugdetDeficit\n",
    "states['bd']=states['TOTAL_EXPENDITURE']-states['TOTAL_REVENUE']\n",
    "print(plt.hist(states['bd'].dropna()))\n",
    "#it seems like a bit skewed data, it seems like it has some ouliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "e5be313b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([172.,  71., 136., 357., 141.,  92.,  81.,  51.,  30., 144.]),\n",
       " array([-250060. , -176208.3, -102356.6,  -28504.9,   45346.8,  119198.5,\n",
       "         193050.2,  266901.9,  340753.6,  414605.3,  488457. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#eliminating\n",
    "from scipy.stats.mstats import winsorize\n",
    "winsorizing3= winsorize(np.array(states['bd'].dropna()), (0.10, 0.10))\n",
    "winsorizing3\n",
    "plt.hist(winsorizing3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "edceb498",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To check if there is any outlier after winsorinzing budget deficit:\n",
    "#z score\n",
    "from scipy.stats import zscore\n",
    "zscores=zscore(states['bd'])\n",
    "z3=len((np.where(zscores>3))[0]) \n",
    "z3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "835b691d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "9dc8baf8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        2678885.0\n",
       "1        1375638.0\n",
       "2        3258079.0\n",
       "3        1711959.0\n",
       "4       26260025.0\n",
       "           ...    \n",
       "1710           NaN\n",
       "1711           NaN\n",
       "1712           NaN\n",
       "1713           NaN\n",
       "1714           NaN\n",
       "Name: w4, Length: 1715, dtype: float64"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#4 \n",
    "winsorizing2:winsorized total expenditure ,winsorizing1:winsorized  total revenue\n",
    "w4=np.array(winsorizing2)-np.array(winsorizing1) # budget deficit after winsorized values\n",
    "states['w4']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "f65d087c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([  2.,   2.,   2.,   9.,  36., 307., 840.,  61.,  10.,   6.]),\n",
       " array([-2520706. , -2103552.3, -1686398.6, -1269244.9,  -852091.2,\n",
       "         -434937.5,   -17783.8,   399369.9,   816523.6,  1233677.3,\n",
       "         1650831. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(w4) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "0e58f121",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To check if there is any outlier in newbudget deficit,which is w4:\n",
    "from scipy.stats import zscore\n",
    "zscore4=zscore(states['w4'])\n",
    "z4=len((np.where(zscores4>3))[0]) \n",
    "z4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "152e8865",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>winsorizing3</th>\n",
       "      <th>w4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-25087.0</td>\n",
       "      <td>2678885.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-77103.0</td>\n",
       "      <td>1375638.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>143501.0</td>\n",
       "      <td>3258079.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31063.0</td>\n",
       "      <td>1711959.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>878807.0</td>\n",
       "      <td>26260025.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1710</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1711</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1712</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1713</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1714</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1715 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      winsorizing3          w4\n",
       "0         -25087.0   2678885.0\n",
       "1         -77103.0   1375638.0\n",
       "2         143501.0   3258079.0\n",
       "3          31063.0   1711959.0\n",
       "4         878807.0  26260025.0\n",
       "...            ...         ...\n",
       "1710           NaN         NaN\n",
       "1711           NaN         NaN\n",
       "1712           NaN         NaN\n",
       "1713           NaN         NaN\n",
       "1714           NaN         NaN\n",
       "\n",
       "[1715 rows x 2 columns]"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#5\n",
    "#comparasion of 3 and 4\n",
    "states[['winsorizing3','w4']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "1cecc90f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>winsorizing3</th>\n",
       "      <th>w4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.275000e+03</td>\n",
       "      <td>1.275000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.041972e+05</td>\n",
       "      <td>9.149803e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>5.743335e+05</td>\n",
       "      <td>1.172705e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-3.897129e+06</td>\n",
       "      <td>1.375638e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-5.162700e+04</td>\n",
       "      <td>2.189504e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.136800e+04</td>\n",
       "      <td>5.085826e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.813080e+05</td>\n",
       "      <td>1.084516e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5.487742e+06</td>\n",
       "      <td>8.921726e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       winsorizing3            w4\n",
       "count  1.275000e+03  1.275000e+03\n",
       "mean   1.041972e+05  9.149803e+06\n",
       "std    5.743335e+05  1.172705e+07\n",
       "min   -3.897129e+06  1.375638e+06\n",
       "25%   -5.162700e+04  2.189504e+06\n",
       "50%    2.136800e+04  5.085826e+06\n",
       "75%    1.813080e+05  1.084516e+07\n",
       "max    5.487742e+06  8.921726e+07"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#comparison\n",
    "states[['winsorizing3','w4']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "eb7e80aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'hist of  budget deficit after winsorizing orginals')"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(1,2,1)\n",
    "plt.hist(states['winsorizing3'])\n",
    "plt.title('hist of winsorizing budget deficit with originals')\n",
    "plt.subplot(1,2,2)\n",
    "plt.hist(states['w4'])\n",
    "plt.title('hist of  budget deficit after winsorizing orginals')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62c06537",
   "metadata": {},
   "outputs": [],
   "source": [
    "#6\n",
    "#I think it is better to use originals."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "065289d4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
