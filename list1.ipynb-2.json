{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "535408ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 12, 34, 37, 45, 54, 56, 66, 67, 76, 98]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#q1\n",
    "my_list = [34, 56, 76, 45, 2, 12, 67, 98, 37, 54, 66]\n",
    "my_list.sort()\n",
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3a8e59cd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2, 12]\n",
      "[76, 98]\n",
      "[2, 12, 76, 98]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "188"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=my_list[0:2]\n",
    "print(a)\n",
    "b=my_list[-2:]\n",
    "print(b)\n",
    "c=a+b\n",
    "print(c)\n",
    "sum(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "00ba6972",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['David', 'Michael', 'John', 'James', 'Greg', 'Mark', 'William', 'Richard', 'Thomas', 'Steven', 'Mary', 'Susan', 'Maria', 'Karen', 'Lisa', 'Linda', 'Donna', 'Patricia', 'Debra', 'Eric', 99, 87, 78, 86, 68, 94, 76, 97, 56, 98, 76, 87, 79, 90, 73, 93, 82, 69, 97, 98]\n",
      "['David', 'Michael', 'John', 'James', 'Greg', 'Mark', 'William', 'Richard', 'Thomas', 'Steven', 'Mary', 'Susan', 'Maria', 'Karen', 'Lisa', 'Linda', 'Donna', 'Patricia', 'Debra', 'Eric']\n",
      "[99, 87, 78, 86, 68, 94, 76, 97, 56, 98, 76, 87, 79, 90, 73, 93, 82, 69, 97, 98]\n",
      "{'k': [99, 87, 78, 86, 68, 94, 76, 97, 56, 98, 76, 87, 79, 90, 73, 93, 82, 69, 97, 98]}\n",
      "99 87 78 86 68 94 76 97 56 98 76 87 79 90 73 93 82 69 97 98\n"
     ]
    }
   ],
   "source": [
    "names = [\"David\", \"Michael\", \"John\", \"James\", \"Greg\", \"Mark\", \"William\", \"Richard\", \"Thomas\", \"Steven\",\"Mary\", \"Susan\", \"Maria\", \"Karen\", \"Lisa\", \"Linda\", \"Donna\", \"Patricia\", \"Debra\", \"Eric\"]\n",
    "scores = [99, 87, 78, 86, 68, 94, 76, 97, 56, 98, 76, 87, 79, 90, 73, 93, 82, 69, 97, 98]\n",
    "names.extend(scores)\n",
    "print(names)\n",
    "#######\n",
    "k=names[0:20]\n",
    "print(k)\n",
    "v=scores[0:20]\n",
    "print(v)\n",
    "diction={'k':v}\n",
    "print(diction)\n",
    "diction.items()\n",
    "\n",
    "\n",
    "#??unable to find the answer\n",
    "print('{''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''} {''}'.format(99, 87, 78, 86, 68, 94, 76, 97, 56, 98, 76, 87, 79, 90, 73, 93, 82, 69, 97, 98))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "6d95e969",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[56,\n",
       " 68,\n",
       " 69,\n",
       " 73,\n",
       " 76,\n",
       " 76,\n",
       " 78,\n",
       " 79,\n",
       " 82,\n",
       " 86,\n",
       " 87,\n",
       " 87,\n",
       " 90,\n",
       " 93,\n",
       " 94,\n",
       " 97,\n",
       " 97,\n",
       " 98,\n",
       " 98,\n",
       " 99]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#q3\n",
    "#maxscore\n",
    "scores.sort()\n",
    "scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "5fb12a36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "99"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scores[-1] #maxscore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "766aa016",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scores.count(99) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "c367c52f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n",
      "['31', '28', '30', '31', '30', '31', '30', '31', '30', '31', '30', '31']\n",
      "January=31\n",
      "['January=31', 'February=28', 'March=30', 'April=31', 'May=30', 'June=31', 'July=30', 'August=31', 'September=30', 'October=31', 'November=30', 'December=31']\n"
     ]
    }
   ],
   "source": [
    "#4\n",
    "list1=['January', 'February', 'March','April','May','June', 'July','August','September','October','November','December']\n",
    "list2=['31','28','30','31','30','31','30','31','30','31','30','31']\n",
    "print(list1)\n",
    "print(list2)\n",
    "list1[0]+'='+list2[0]\n",
    "print(list1[0]+'='+list2[0])\n",
    "Listnew=[list1[0]+'='+list2[0],list1[1]+'='+list2[1],list1[2]+'='+list2[2],list1[3]+'='+list2[3],list1[4]+'='+list2[4],\n",
    "        list1[5]+'='+list2[5],list1[6]+'='+list2[6],list1[7]+'='+list2[7],list1[8]+'='+list2[8],list1[9]+'='+list2[9],\n",
    "        list1[10]+'='+list2[10],list1[11]+'='+list2[11]]\n",
    "print(Listnew)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4a8abff3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97055840",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
