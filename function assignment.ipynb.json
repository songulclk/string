{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "058cd1cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "def prime(n):\n",
    "    if (n==1):\n",
    "        return False\n",
    "    elif (n==2):\n",
    "        return True;\n",
    "    else:\n",
    "        for x in range(2,n):\n",
    "            if(n % x==0):\n",
    "                return False\n",
    "        return True             \n",
    "print(prime(5))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e26e9fac",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def prime(n):\n",
    "    if (n==1):\n",
    "        return False\n",
    "    elif (n==2):\n",
    "        return True;\n",
    "    else:\n",
    "        for x in range(2,n):\n",
    "            if(n % x==0):\n",
    "                return False\n",
    "        return True    \n",
    "    \n",
    "input('please enter a number:')\n",
    "n=int(input('please enter a number:'))\n",
    "\n",
    "print(prime(n))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b343fed",
   "metadata": {},
   "outputs": [],
   "source": [
    "#q2\n",
    "def celsiustoromer (celsius):\n",
    "    romer= celsius*(21/40)+7.5\n",
    "    return romer\n",
    "\n",
    "print(celsiustoromer(24))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d04a84c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#q3\n",
    "def is_divisible(wallsizemm,pixelmm):\n",
    "    fit= wallsizemm%pixelmm==0\n",
    "    return True\n",
    "\n",
    "print(is_divisible(4050, 27))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32ea96c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#q4\n",
    "def guessblue (bluein,redin,blueout,redout):\n",
    "    blueleft=bluein-blueout\n",
    "    redleft=redin-redout\n",
    "    totalleft=blueleft+redleft\n",
    "    probability=blueleft/totalleft\n",
    "    return probablity\n",
    "\n",
    "print(guessblue(5,5,2,3))\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "480cb30e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#q6\n",
    "def take_umbrealla(weather,probabality):\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
